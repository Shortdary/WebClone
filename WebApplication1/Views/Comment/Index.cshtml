@using System.Security.Claims
@model PostDetailWithUser
@{
    int userId = 0;
    if (ViewContext.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier) is not null)
    {

        userId = int.Parse(ViewContext.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier)!.Value);
    }
}


<link rel="stylesheet" href="@(Url.Content("~/css/Comment.css"))" />

<div class="commentsTitle">댓글</div>
<div class="comments" id="comments">
    <div class="best">
    </div>
    @foreach (var c in Model.Comments)
    {
        <div class="comment" id=@("comment" + c.Id) aid=@c.PostId uid=@c.CreatedUid pid=@c.ParentCommentId gid=@c.Id>
            <div class="main @(@c.ParentCommentId is null? string.Empty : "isReply")">
                <div class="userImage" style="background-image: url('/asset/defaultuser.png');"></div>
                <div class="commentWrapper">
                    <div class="info">
                        <div class="left">
                            <div class="nickName">
                                <div class="text">
                                    <span>@c.Nickname</span>
                                    @if (c.CreatedUid == Model.CreatedUid)
                                    {
                                        <span class="author">글쓴이</span>
                                    }
                                    @if (c.CreatedUid == userId)
                                    {
                                        <span class="author">나</span>
                                    }
                                </div>
                            </div>
                            <div class="counts">
                                <div class="datetime">@c.CreatedTime</div>
                                @if (c.LikeCount > 0)
                                {
                                    <div class="dot"></div>
                                    <div class="likeCount">
                                        <i class="fa-regular fa-thumbs-up"></i>
                                        @c.LikeCount
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="commentContent" id="commentContent">
                        <div>@c.Comment1</div>
                    </div>
                    <div class="commentContainer" id="commentEtc"></div>
                </div>
            </div>

        </div>
    }
</div>
<div class="commentContainer" id="newComment">
    <div class="contentContainer">
        <div class="commentInput">
            @if (User.Identity.IsAuthenticated)
            {
                <form action="/comment/add" method="post" id="commentForm">
                    <div class="commentContent">
                        @Html.TextArea("Comment1", "", new { @placeholder = "댓글을 작성해주세요", @maxlength = "400" })
                        <div class="attached"></div>
                    </div>
                    <input type="hidden" id="PostId" name="PostId" value=@Model.Id />
                    <input type="hidden" id="ParentCommentId" name="ParentCommentId" value=null />
                    <div class="submit"><button>등록</button></div>
                    @Html.AntiForgeryToken()
                </form>
            }
            else
            {
                <div class="commentContent">
                    <textarea disabled="" name="content" placeholder="로그인 해주세요"></textarea>
                    <div class="attached"></div>
                </div>
                <div class="submit"><button type="button" onclick="redirectToLoginPage()">로그인</button></div>
            }
        </div>
    </div>
</div>
<script>
    function redirectToLoginPage() {
        window.location.href = "/login?redirect_url=" + '@ViewBag.RequestUrl';
    }
</script>
<script>
    document.getElementById('commentForm').addEventListener('submit', function () {
        sessionStorage.setItem('scrollPosition', window.scrollY);
    });

    window.onload = function () {
        var scrollPosition = sessionStorage.getItem('scrollPosition');
        if (scrollPosition) {
            window.scrollTo(0, scrollPosition);
            sessionStorage.removeItem('scrollPosition');
        }
    };
</script>
@* <script>
    function revalidateForm() {
        var form = $('#commentForm');
        form.removeData('validator');
        form.removeData('unobtrusiveValidation');
        $.validator.unobtrusive.parse(form);
    }

    function partialRenderCallback() {
        // 여기서 부분적으로 업데이트할 내용이 변경될 때 실행될 코드를 작성하세요.
        // 예를 들어, 새로운 입력 필드가 추가되는 경우 등
        revalidateForm();
    }

    $('#comments').on('click', function () {
        partialRenderCallback();
    });
</script> *@